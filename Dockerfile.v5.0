FROM ubuntu:latest

LABEL maintainer "Perfection <perfection@lighthouse.storage>"

# update apt and install dependencies
RUN apt-get update && \ 
    apt-get install -y wget && \
    rm -rf /var/lib/apt/lists/*


# download and extract ipfs
RUN wget https://dist.ipfs.io/go-ipfs/v0.13.0/go-ipfs_v0.13.0_linux-386.tar.gz && \
    tar xvfz go-ipfs_v0.13.0_linux-386.tar.gz && \
    mv go-ipfs/ipfs /usr/local/bin/ && \
    rm go-ipfs_v0.13.0_linux-386.tar.gz && \
    rm -rf go-ipfs

# checkpoint --- echo ipfs version
RUN ipfs version

ENV IPFS_PATH /data/ipfs

ENV API_PORT 5002
ENV GATEWAY_PORT 8080
ENV SWARM_PORT 4001

EXPOSE ${SWARM_PORT}
# This may introduce security risk to expose API_PORT public
# EXPOSE ${API_PORT}
EXPOSE ${GATEWAY_PORT}

RUN mkdir -p ${IPFS_PATH} 

# no need to for this as docker runs in root user mode
# RUN chown ubuntu:ubuntu ${IPFS_PATH}

# configure ipfs for production
RUN ipfs init -p lowpower && \
    ipfs config Datastore.StorageMax 30GB && \
    ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080 && \
    ipfs config --json Datastore.BloomFilterSize 1048576 && \
    ipfs config Datastore.GCPeriod "5m" && \
    ipfs config --json Datastore.StorageGCWatermark 60 && \
    # ipfs config --json Experimental.AcceleratedDHTClient false && \
    # ipfs config --json Experimental.FileStoreEnabled false && \
    ipfs config Reprovider.Interval "0" && \
    ipfs config Reprovider.Strategy "roots" && \
    ipfs config Swarm.Reprovider.Strategy "roots" && \
    ipfs config --json Swarm.ConnMgr.LowWater 600 && \
    ipfs config --json Swarm.ConnMgr.HighWater 900 && \
    # ipfs config Swarm.ConnMgr.GracePeriod "20s" && \
    ipfs config --json Swarm.RelayClient.Enabled false && \
    ipfs config --json Swarm.RelayService.Enabled false


# by default, run `ipfs daemon` to start as a running node
ENTRYPOINT ipfs daemon --routing dhtclient